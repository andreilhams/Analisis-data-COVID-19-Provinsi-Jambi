tkselection.set(familyBox, fam)
availLinks <- links[availableLinks[fam + 1,]]
for (lnk in availLinks) tkinsert(linkBox, "end", lnk)
tkconfigure(linkBox, height=length(availLinks))
lnk <- if (currentModel) which(currentFields$link == availLinks) - 1
else 0
tkselection.set(linkBox, lnk)
tkbind(familyBox, "<Double-ButtonPress-1>", onFamilySelect)
dialogSuffix(focus=lhsEntry, preventDoubleClick=TRUE)
}
resetGLMM <- function(){
putRcmdr("reset.model", TRUE)
putDialog("generalizedLinearMixedModel", NULL)
putDialog("generalizedLinearMixedModel", NULL, resettable=FALSE)
generalizedLinearMixedModel()
}
indexPlot <- function () {
defaults <- list(initial.x = NULL, initial.type = "spikes", initial.identify = "auto",
initial.id.n="2", initial.tab=0,
initial.ylab=gettextRcmdr("<auto>"), initial.main=gettextRcmdr("<auto>"), initial.group = NULL)
dialog.values <- getDialog("indexPlot", defaults)
initial.group <- dialog.values$initial.group
.groups <- if (is.null(initial.group)) FALSE else initial.group
initializeDialog(title = gettextRcmdr("Index Plot"), use.tabs=TRUE)
xBox <- variableListBox(dataTab, Numeric(), title = gettextRcmdr("Variable (pick one or more)"),
selectmode = "multiple", initialSelection = varPosn (dialog.values$initial.x, "numeric"))
optionsFrame <- tkframe(optionsTab)
optFrame <- ttklabelframe(optionsFrame, labelwidget=tklabel(optionsFrame, text = gettextRcmdr("Plot Options"),
font="RcmdrTitleFont", foreground=getRcmdr("title.color")))
parFrame <- ttklabelframe(optionsFrame, labelwidget=tklabel(optionsFrame, text = gettextRcmdr("Plot Labels"),
font="RcmdrTitleFont", foreground=getRcmdr("title.color")))
typeVariable <- tclVar(dialog.values$initial.type)
styleFrame <- tkframe(optFrame)
radioButtons(styleFrame, name = "type", buttons = c("spikes", "points"),
labels = gettextRcmdr(c("Spikes", "Points")), title = gettextRcmdr("Style of plot"),
initialValue = dialog.values$initial.type)
identifyPointsFrame <- tkframe(optFrame)
radioButtons(identifyPointsFrame, name = "identify", buttons = c("auto", "mouse",
"not"), labels = gettextRcmdr(c("Automatically",
"Interactively with mouse", "Do not identify")), title = gettextRcmdr("Identify Points"),
initialValue = dialog.values$initial.identify)
id.n.Var <- tclVar(dialog.values$initial.id.n)
npointsSpinner <- tkspinbox(identifyPointsFrame, from=1, to=10, width=2, textvariable=id.n.Var)
ylabVar <- tclVar(dialog.values$initial.ylab)
mainVar <- tclVar(dialog.values$initial.main)
ylabEntry <- ttkentry(parFrame, width = "25", textvariable = ylabVar)
ylabScroll <- ttkscrollbar(parFrame, orient = "horizontal",
command = function(...) tkxview(ylabEntry, ...))
tkconfigure(ylabEntry, xscrollcommand = function(...) tkset(ylabScroll,
...))
tkgrid(labelRcmdr(parFrame, text = gettextRcmdr("y-axis label")), ylabEntry, sticky = "ew", padx=6)
tkgrid(labelRcmdr(parFrame, text =""), ylabScroll, sticky = "ew", padx=6)
mainEntry <- ttkentry(parFrame, width = "25", textvariable = mainVar)
mainScroll <- ttkscrollbar(parFrame, orient = "horizontal",
command = function(...) tkxview(mainEntry, ...))
tkconfigure(mainEntry, xscrollcommand = function(...) tkset(mainScroll,
...))
tkgrid(labelRcmdr(parFrame, text = gettextRcmdr("Graph title")), mainEntry, sticky = "ew", padx=6)
tkgrid(labelRcmdr(parFrame, text=""), mainScroll, sticky = "ew", padx=6)
onOK <- function() {
tab <- if (as.character(tkselect(notebook)) == dataTab$ID) 0 else 1
x <- getSelection(xBox)
identify <- tclvalue(identifyVariable)
id.n <- tclvalue(id.n.Var)
if (is.na(suppressWarnings(as.numeric(id.n))) || round(as.numeric(id.n)) != as.numeric(id.n)){
errorCondition(recall = indexPlot, message = gettextRcmdr("number of points to identify must be an integer"))
return()
}
ylab <- trim.blanks(tclvalue(ylabVar))
ylab <- if (ylab == gettextRcmdr("<auto>"))
""
else paste(", ylab=\"", ylab, "\"", sep = "")
main <- trim.blanks(tclvalue(mainVar))
main <- if (main == gettextRcmdr("<auto>"))
""
else paste(", main=\"", main, "\"", sep = "")
closeDialog()
n.x <- length(x)
if (n.x == 0) {
errorCondition(recall = indexPlot, message = gettextRcmdr("You must select a variable"))
return()
}
if (n.x > 5){
response <- RcmdrTkmessageBox(message=sprintf(gettextRcmdr("You have selected %d variables.\nDo you want to proceed?"), n.x),
icon="question", type="okcancel", default="cancel")
if ("cancel" == tclvalue(response)) {
tkfocus(CommanderWindow())
return()
}
}
putDialog ("indexPlot", list(initial.x = x, initial.type = tclvalue(typeVariable), initial.identify = identify,
initial.id.n = id.n, initial.tab=tab,
initial.ylab = tclvalue(ylabVar), initial.main = tclvalue(mainVar),
initial.group=if (.groups == FALSE) NULL else .groups))
type <- if (tclvalue(typeVariable) == "spikes") "h" else "p"
method <- if (identify == "mouse") "identify" else "y"
id.n.use <- if (identify == "not") 0 else id.n
.activeDataSet <- ActiveDataSet()
if (identify == "mouse") {
RcmdrTkmessageBox(title = "Identify Points", message = paste(gettextRcmdr("Use left mouse button to identify points,\n"),
gettextRcmdr(if (MacOSXP())
"esc key to exit."
else "right button to exit."), sep = ""), icon = "info",
type = "ok")
}
x <- if (n.x == 1) paste0("'", x, "'")
else paste0("c(", paste(paste0("'", x, "'"), collapse=", "), ")")
command <- if (is.null(.groups) || .groups == FALSE) {
paste0("indexplot(", .activeDataSet, "[,", x, ", drop=FALSE], type='", type,
"', id.method='", method, "', id.n=", id.n.use,
ylab, main, ")")
} else {
paste0("indexplot(", .activeDataSet, "[,", x, ", drop=FALSE], type='", type,
"', id.method='", method, "', id.n=", id.n.use,
ylab, main, ", groups=", .activeDataSet, "$", .groups, ")")
}
if (identify == "mouse") command <- suppressMarkdown(command)
doItAndPrint(command)
activateMenus()
tkfocus(CommanderWindow())
}
groupsBox(indexPlot, initialGroup=initial.group,
initialLabel=if (is.null(initial.group)) gettextRcmdr("Mark by groups")
else paste(gettextRcmdr("Mark by:"), initial.group), window=dataTab)
OKCancelHelp(helpSubject = "indexplot", reset = "indexPlot", apply="indexPlot")
tkgrid(getFrame(xBox), sticky = "nw")
tkgrid(groupsFrame, sticky = "w")
tkgrid(typeFrame, sticky = "w")
tkgrid(styleFrame, sticky = "w")
tkgrid(identifyFrame, sticky="w")
tkgrid(labelRcmdr(identifyPointsFrame, text=gettextRcmdr("Number of points to identify  ")), npointsSpinner, sticky="w")
tkgrid(identifyPointsFrame, sticky="w")
tkgrid(optFrame, parFrame, sticky = "nswe", padx=6, pady=6)
tkgrid(optionsFrame, sticky = "w")
dialogSuffix(use.tabs=TRUE, grid.buttons=TRUE)
}
setwd?
# the following functions improved by Miroslav Ristic 2013-07: barGraph, indexPlot, boxPlot,
#    DensityPlot, Histogram, pieChart, PlotMeans, QQPlot, scatterPlot, scatterPlotMatrix, Stripchart,
#    Xyplot
setwd
dialog.values <- getDialog("indexPlot", defaults)
installed.packages()
tkgrid(optionsFrame, sticky = "w")
install.packages("Rmcdr")
new_cov_jambi <-
cov_jambi %>%
select(-contains("DIRAWAT_OR_ISOLASI")) %>%
select(-starts_with("AKUMULASI")) %>%
rename(
kasus_baru = KASUS,
meninggal = MENINGGAL,
sembuh = SEMBUH
) %>%
mutate(
tanggal = as.POSIXct(tanggal / 1000, origin = "1970-01-01"),
tanggal = as.Date(tanggal)
)
str(new_cov_jambi)
ggplot(new_cov_jambi, aes(x = tanggal, y = kasus_baru)) +
geom_col()
library(httr)
library(dplyr)
library(ggplot2)
library(hrbrthemes)
library(lubridate)
library(tidyr)
resp_jambi <-GET("https://data.covid19.go.id/public/api/prov_detail_JAMBI.json")
cov_jambi_raw <- content(resp_jambi, as = "parsed", simplifyVector = TRUE)
names(cov_jambi_raw)
cov_jambi_raw $kasus_total
cov_jambi_raw $meninggal_persen
cov_jambi_raw $sembuh_persen
cov_jambi <- cov_jambi_raw$list_perkembangan
str(cov_jambi)
head(cov_jambi)
new_cov_jambi <-
cov_jambi %>%
select(-contains("DIRAWAT_OR_ISOLASI")) %>%
select(-starts_with("AKUMULASI")) %>%
rename(
kasus_baru = KASUS,
meninggal = MENINGGAL,
sembuh = SEMBUH
) %>%
mutate(
tanggal = as.POSIXct(tanggal / 1000, origin = "1970-01-01"),
tanggal = as.Date(tanggal)
)
str(new_cov_jambi)
ggplot(new_cov_jambi, aes(x = tanggal, y = kasus_baru)) +
geom_col()
resp_jambi <-GET("https://data.covid19.go.id/public/api/prov_detail_JAMBI.json")
cov_jambi_raw <- content(resp_jambi, as = "parsed", simplifyVector = TRUE)
ggplot(new_cov_jambi, aes(x = tanggal, y = kasus_baru)) +
geom_col()
names(cov_jambi_raw)
cov_jambi_raw $kasus_total
cov_jambi_raw $meninggal_persen
cov_jambi_raw $sembuh_persen
ggplot(new_cov_jambi, aes(tanggal, kasus_baru)) +
geom_col(fill = "salmon") +
labs(
x = NULL,
y = "Jumlah kasus",
title = "Kasus Harian Positif COVID-19 di Jambi",
subtitle = "Terjadi pelonjakan kasus di awal bulan Oktober akibat klaster Secapa Kota Jambi",
caption = "Sumber data: covid.19.go.id"
)+
theme_ipsum(
base_size = 10,
plot_title_size = 21,
grid = "Y",
ticks = TRUE
)+
theme(plot.title.position = "plot")
cov_jambi <- cov_jambi_raw$list_perkembangan
str(cov_jambi)
head(cov_jambi)
library(httr)
library(dplyr)
library(ggplot2)
library(hrbrthemes)
library(lubridate)
library(tidyr)
resp_jambi <-GET("https://data.covid19.go.id/public/api/prov_detail_JAMBI.json")
cov_jambi_raw <- content(resp_jambi, as = "parsed", simplifyVector = TRUE)
names(cov_jambi_raw)
cov_jambi_raw $kasus_total
cov_jambi_raw $meninggal_persen
cov_jambi_raw $sembuh_persen
cov_jambi <- cov_jambi_raw$list_perkembangan
str(cov_jambi)
head(cov_jambi)
new_cov_jambi <-
cov_jambi %>%
select(-contains("DIRAWAT_OR_ISOLASI")) %>%
select(-starts_with("AKUMULASI")) %>%
rename(
kasus_baru = KASUS,
meninggal = MENINGGAL,
sembuh = SEMBUH
) %>%
mutate(
tanggal = as.POSIXct(tanggal / 1000, origin = "1970-01-01"),
tanggal = as.Date(tanggal)
)
str(new_cov_jambi)
ggplot(new_cov_jambi, aes(x = tanggal, y = kasus_baru)) +
geom_col()
ggplot(new_cov_jambi, aes(tanggal, kasus_baru)) +
geom_col(fill = "salmon") +
labs(
x = NULL,
y = "Jumlah kasus",
title = "Kasus Harian Positif COVID-19 di Jambi",
subtitle = "Terjadi pelonjakan kasus di awal bulan Oktober akibat klaster Secapa Kota Jambi",
caption = "Sumber data: covid.19.go.id"
)+
theme_ipsum(
base_size = 10,
plot_title_size = 21,
grid = "Y",
ticks = TRUE
)+
theme(plot.title.position = "plot")
ggplot(new_cov_jambi, aes(tanggal, sembuh)) +
geom_col(fill = "olivedrab2") +
labs(
x = NULL,
y = "Jumlah kasus",
title = "Kasus Harian Sembuh Dari COVID-19 di Jambi",
caption = "Sumber data: covid.19.go.id"
) +
theme_ipsum(
base_size = 10,
plot_title_size = 21,
grid = "Y",
ticks = TRUE
) +
theme(plot.title.position = "plot")
ggplot(new_cov_jambi, aes(tanggal, meninggal)) +
geom_col(fill = "darkslategray4") +
labs(
x = NULL,
y = "Jumlah kasus",
title = "Kasus Harian Meninggal Akibat COVID-19 di Jambi",
caption = "Sumber data: covid.19.go.id"
) +
theme_ipsum(
base_size = 10,
plot_title_size = 21,
grid = "Y",
ticks = TRUE
) +
theme(plot.title.position = "plot")
ggplot(new_cov_jambi, aes(tanggal, sembuh)) +
geom_col(fill = "olivedrab2") +
labs(
x = NULL,
y = "Jumlah kasus",
title = "Kasus Harian Sembuh Dari COVID-19 di Jambi",
caption = "Sumber data: covid.19.go.id"
) +
theme_ipsum(
base_size = 10,
plot_title_size = 21,
grid = "Y",
ticks = TRUE
) +
theme(plot.title.position = "plot")
cov_jambi <- cov_jambi_raw$list_perkembangan
str(cov_jambi)
head(cov_jambi)
new_cov_jambi <-
cov_jambi %>%
select(-contains("DIRAWAT_OR_ISOLASI")) %>%
select(-starts_with("AKUMULASI")) %>%
rename(
kasus_baru = KASUS,
meninggal = MENINGGAL,
sembuh = SEMBUH
) %>%
mutate(
tanggal = as.POSIXct(tanggal / 1000, origin = "1970-01-01"),
tanggal = as.Date(tanggal)
)
str(new_cov_jambi)
ggplot(new_cov_jambi, aes(x = tanggal, y = kasus_baru)) +
geom_col()
ggplot(new_cov_jambi, aes(tanggal, kasus_baru)) +
geom_col(fill = "salmon") +
labs(
x = NULL,
y = "Jumlah kasus",
title = "Kasus Harian Positif COVID-19 di Jambi",
subtitle = "Terjadi pelonjakan kasus di awal bulan Oktober akibat klaster Secapa Kota Jambi",
caption = "Sumber data: covid.19.go.id"
)+
theme_ipsum(
base_size = 10,
plot_title_size = 21,
grid = "Y",
ticks = TRUE
)+
theme(plot.title.position = "plot")
ggplot(new_cov_jambi, aes(tanggal, sembuh)) +
geom_col(fill = "olivedrab2") +
labs(
x = NULL,
y = "Jumlah kasus",
title = "Kasus Harian Sembuh Dari COVID-19 di Jambi",
caption = "Sumber data: covid.19.go.id"
) +
theme_ipsum(
base_size = 10,
plot_title_size = 21,
grid = "Y",
ticks = TRUE
) +
theme(plot.title.position = "plot")
ggplot(new_cov_jambi, aes(tanggal, meninggal)) +
geom_col(fill = "darkslategray4") +
labs(
x = NULL,
y = "Jumlah kasus",
title = "Kasus Harian Meninggal Akibat COVID-19 di Jambi",
caption = "Sumber data: covid.19.go.id"
) +
theme_ipsum(
base_size = 10,
plot_title_size = 21,
grid = "Y",
ticks = TRUE
) +
theme(plot.title.position = "plot")
cov_jambi_pekanan <- new_cov_jambi %>%
count(
tahun = year(tanggal),
pekan_ke = week(tanggal),
wt = kasus_baru,
name = "jumlah"
)
cov_jambi_pekanan <- new_cov_jambi %>%
count(
tahun = year(tanggal),
pekan_ke = week(tanggal),
wt = kasus_baru,
name = "jumlah"
)
glimpse(cov_jambi_pekanan)
cov_jambi_pekanan <-
cov_jambi_pekanan %>%
mutate(
jumlah_pekanlalu = dplyr::lag(jumlah, 1),
jumlah_pekanlalu = ifelse(is.na(jumlah_pekanlalu), 0, jumlah_pekanlalu),
lebih_baik = jumlah < jumlah_pekanlalu
)
glimpse(cov_jambi_pekanan)
ggplot(cov_jambi_pekanan, aes(pekan_ke, jumlah, fill = lebih_baik))+
geom_col(show.legend = FALSE)+
scale_x_continuous(breaks = 9:29, expand = c(0,0))+
scale_fill_manual(values = c("TRUE" = "seagreen3", "FALSE" = "salmon"))+
labs(
x = NULL,
y = "Jumlah kasus",
title = "Kasus Pekanan Positif COVID-19 di Jambi",
subtitle = "Kolom Hijau menunjukkan penambahan kasus baru lebih sedikit dibandingkan satu pekan sebelumnya",
caption = "Sumber data: covid.19.go.id"
)+
theme_ipsum(
base_size = 13,
plot_title_size = 21,
grid = "Y",
ticks = TRUE
)+
theme(plot.title.position = "plot")
cov_jambi_pekanan <-
cov_jambi_pekanan %>%
mutate(
jumlah_pekanlalu = dplyr::lag(jumlah, 1),
jumlah_pekanlalu = ifelse(is.na(jumlah_pekanlalu), 0, jumlah_pekanlalu),
lebih_baik = jumlah < jumlah_pekanlalu
)
glimpse(cov_jambi_pekanan)
ggplot(cov_jambi_pekanan, aes(pekan_ke, jumlah, fill = lebih_baik))+
geom_col(show.legend = FALSE)+
scale_x_continuous(breaks = 9:29, expand = c(0,0))+
scale_fill_manual(values = c("TRUE" = "seagreen3", "FALSE" = "salmon"))+
labs(
x = NULL,
y = "Jumlah kasus",
title = "Kasus Pekanan Positif COVID-19 di Jambi",
subtitle = "Kolom Hijau menunjukkan penambahan kasus baru lebih sedikit dibandingkan satu pekan sebelumnya",
caption = "Sumber data: covid.19.go.id"
)+
theme_ipsum(
base_size = 13,
plot_title_size = 21,
grid = "Y",
ticks = TRUE
)+
theme(plot.title.position = "plot")
cov_jambi_akumulasi <-
new_cov_jambi %>%
transmute(
tanggal,
akumulasi_aktif = cumsum(kasus_baru) - cumsum(sembuh) - cumsum(meninggal),
akumulasi_sembuh = cumsum(sembuh),
akumulasi_meninggal = cumsum(meninggal)
)
tail(cov_jambi_akumulasi)
ggplot(data = cov_jambi_akumulasi, aes(x = tanggal, y = akumulasi_aktif)) +
geom_line()
dim(cov_jambi_akumulasi)
cov_jambi_akumulasi_pivot <-
cov_jambi_akumulasi %>%
gather(
key = "kategori",
value = "jumlah",
-tanggal
) %>%
mutate(
kategori = sub(pattern = "akumulasi_", replacement = "", kategori)
)
dim(cov_jambi_akumulasi_pivot)
glimpse(cov_jambi_akumulasi_pivot)
ggplot(cov_jambi_akumulasi_pivot, aes(tanggal, jumlah, colour = (kategori))) +
geom_line(size = 0.9) +
scale_y_continuous(sec.axis = dup_axis(name = NULL)) +
scale_colour_manual(
values = c("aktif" = "salmon","meninggal" = "darkslategray4","sembuh" = "olivedrab2"),
labels = c("Aktif", "Meninggal", "Sembuh")) +
labs(
x = NULL,
y = "Jumlah kasus akumulasi",
colour = NULL,
title = "Dinamika Kasus COVID-19 di Jambi",
caption = "Sumber data: covid.19.go.id"
) +
theme_ipsum(
base_size = 13,
plot_title_size = 21,
grid = "Y",
ticks = TRUE
) +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "top"
)
cls
ls
is.element('DBI')
is.element("DBI", x[,1])
is.element("DBI")
x = installed.packages()
colnames(x)
nrow(x)
is.element("DBI", x[,1])
library(httr)
detach("package:httr", unload = TRUE)
library(httr)
library(dplyr)
library(ggplot2)
library(hrbrthemes)
library(lubridate)
library(tidyr)
resp_jambi <-GET("https://data.covid19.go.id/public/api/prov_detail_JAMBI.json")
cov_jambi_raw <- content(resp_jambi, as = "parsed", simplifyVector = TRUE)
cov_jambi_raw
View(cov_jambi_raw)
View(resp_jambi)
